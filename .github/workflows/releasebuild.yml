on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      GITHUB_REF:
        required: true
        type: string
      upload_docs:
        required: true
        type: boolean
    secrets:
      CF_API_KEY:
        required: true
      MODRINTH_TOKEN:
        required: true
      PYPI_API_TOKEN:
        required: true


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 17

      - name: Grant Execute Permission
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew build

      - name: Upload To Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.branch }}
          path: |
            ./dist/**/*
            ./gradle.properties

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.branch }}

      - name: Load Gradle Properties
        uses: christian-draeger/read-properties@1.1.1
        id: gradle_properties
        with:
          path: './gradle.properties'
          properties: 'java_version'

      - name: Check For Fabric Jar
        uses: actions/github-script@v5
        id: fabric_release
        with:
          result-encoding: string
          script: |
            const fs = require("fs")
            return fs.readdirSync("./").filter(e => e.endsWith("fabric.jar"))[0] || false;

      - name: Upload Fabric to Git Release
        if: ${{ steps.fabric_release.outputs.result != 'false' }}
        uses: JasonEtco/upload-to-release@master
        with:
          args: ./${{ steps.fabric_release.outputs.result }} application/jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check For Forge Jar
        uses: actions/github-script@v5
        id: forge_release
        with:
          result-encoding: string
          script: |
            const fs = require("fs")
            return fs.readdirSync("./").filter(e => e.endsWith("forge.jar"))[0] || false;

      - name: Upload Forge to Git Release
        if: ${{ steps.forge_release.outputs.result != 'false' }}
        uses: JasonEtco/upload-to-release@master
        with:
          args: ./${{ steps.forge_release.outputs.result }} application/jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Zip TS
        uses: vimtor/action-zip@v1
        with:
          files: typescript/
          dest: typescript-${{ inputs.branch }}.zip

      - name: Upload TS to Git Release
        uses: JasonEtco/upload-to-release@master
        with:
          args: ./typescript-${{ inputs.branch }}.zip application/jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Version Number
        uses: actions/github-script@v5
        id: version_num
        env:
          GV: '${{ steps.gradle_properties.outputs.minecraft_version }}'
          REF: '${{ inputs.GITHUB_REF }}'
        with:
          result-encoding: string
          script: |
            return `${process.env.REF.replace(/\/?refs\/tags\//, '')}+${process.env.GV}`

      - name: Run Publish Fabric
        if: ${{ steps.fabric_release.outputs.result != 'false' }}
        uses: Kir-Antipov/mc-publish@v3.2
        with:
          modrinth-id: 3wGWhm8A
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}

          curseforge-id: 403185
          curseforge-token: ${{ secrets.CF_API_KEY }}

          name: ${{ steps.fabric_release.outputs.result }}
          version: ${{ steps.version_num.outputs.result }}-fabric

          files: ./${{ steps.fabric_release.outputs.result }}
          version-type: release

          loaders: fabric
          game-versions: ${{ steps.gradle_properties.outputs.minecraft_version }}

          java: ${{ steps.gradle_properties.outputs.java_version }}
          retry-attempts: 5
          retry-delay: 60000

      - name: Run Publish Forge
        if: ${{ steps.forge_release.outputs.result != 'false' }}
        uses: Kir-Antipov/mc-publish@v3.2
        with:
          modrinth-id: 3wGWhm8A
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}

          curseforge-id: 403185
          curseforge-token: ${{ secrets.CF_API_KEY }}

          name: ${{ steps.forge_release.outputs.result }}
          version: ${{ steps.version_num.outputs.result }}-forge

          files: ./${{ steps.forge_release.outputs.result }}
          version-type: release

          loaders: forge
          game-versions: ${{ steps.gradle_properties.outputs.minecraft_version }}

          java: ${{ steps.gradle_properties.outputs.java_version }}
          retry-attempts: 5
          retry-delay: 60000

  upload_pydoc:
    if: ${{ inputs.upload_docs }}
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.branch }}
          path: dist

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install Python Deps
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Upload PyDoc
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          cd dist/python
          python setup.py sdist bdist_wheel
          twine upload dist/*
